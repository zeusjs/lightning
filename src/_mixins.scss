// Mixin for keyframes
@mixin keyframes($name)
{
  @-webkit-keyframes #{$name} { @content; }
  @-moz-keyframes #{$name} { @content; }
  @-ms-keyframes #{$name} { @content; }
  @keyframes #{$name} { @content; }
}

// Mixin for animations
@mixin animation($prop) {
  -webkit-animation: $prop;
  -moz-animation: $prop;
  -o-animation: $prop;
  animation: $prop;
}

@mixin keyframes_prop_animation_generator($anim_name, $prop_name, $prop_values...)
{
    $i: 0;

    @keyframes #{$anim_name} {
        @each $v in $prop_values
        {

            #{percentage($i/(length($prop_values) - 1))}
            {
                #{$prop_name}: #{$v};
            }
            $i: $i + 1;
        }
    }
}

@mixin make_shadow() {
    box-shadow: 0px 1px 3px 2px $color_panel_shadow;
}

@mixin make_tile($h_padding:30px,$v_padding:10px) {
    border: 1px solid #e0e0e0;
    padding:$v_padding $h_padding $v_padding $h_padding;
    border-radius: 2px;
    margin-bottom: 20px;
    background-color: $color_white;

    @include make_shadow();
}

@mixin user_select($val) {

  user-select: $val;
}


@mixin show_ellipsis($width) {
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: $width;
    white-space: nowrap;
}



@mixin btn_nofill_variant($type,$color)
{
    .btn.btn-nofill.btn-#{$type}:not(:active):not(:hover):not(:focus)
    {
        background-color: $color_white;
        color: $color;
    }
}

@mixin btn_async_variant($type, $color)
{
    .btn-#{$type} .btn-async-spinner
    {
        >div
        {
            border-color: darken($color, 10%);
        }
    }
}


@mixin bulletin_variant($type, $color)
{

    .bulletin.bulletin-#{$type}
    {
        border-color: $color;
        background-color: lighten($color, 5%);
        color: text_color($color);

        h3,h4,h5,h6
        {
            color: text_color($color);
            margin-bottom: 20px;
        }
    }
}

@mixin zs_checkbox_variant($size, $ratio)
{
    .zs-checkbox.zs-checkbox-#{$size}
    {
        height: 15px * $ratio;
        width: 15px * $ratio;
        border-radius: 2px * $ratio;
        label {
            height: 16px * $ratio;
            width: 16px * $ratio;
            &:after {
                border-left: 0  0 ( 2px * $ratio ) (2px* $ratio);
                height: 5px * $ratio;
                left: 2px * $ratio;
                top: 4px * $ratio;
                width: 10px * $ratio;
            }
        }
    }
}

@mixin for_phone()
{
    @media screen and (max-width: $screen-xs-max)
    {
        @content
    }
}
